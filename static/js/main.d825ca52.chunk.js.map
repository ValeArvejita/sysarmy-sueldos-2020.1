{"version":3,"sources":["model.js","App.js","serviceWorker.js","index.js"],"names":["Model","xpathSync","node","path","el","ret","els","treeSync","evaluate","XPathResult","ANY_TYPE","iterateNext","push","xpath","a","tree","features","map","attributes","name","value","predict","row","segments","runSimplePredicate","predicate","fv","parseFloat","field","cv","operator","Error","findScore","condition","length","nodeName","reduce","acc","v","score","Promise","all","segment","resolve","setTimeout","weight","root","this","reject","xhr","XMLHttpRequest","onload","responseXML","onerror","open","responseType","send","regions_map","App","state","changedSinceSubmitted","salary","answers","options","degree","specialization","occupation","duty","contractType","sexualOrientation","os","events","benefits","universities","tech","handleChange","event","setState","key","target","val","Array","isArray","index","indexOf","arr","concat","splice","Object","assign","sort","updateSalary","model","fromEntries","entries","k","enc","join","encodeURIComponent","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","prefixOptions","prefix","filter","f","startsWith","substr","className","Box","bgcolor","color","p","position","top","right","zIndex","format","href","rel","FormControl","component","required","FormLabel","RadioGroup","aria-label","onChange","FormControlLabel","control","Radio","label","InputLabel","htmlFor","Select","inputProps","id","MenuItem","from","keys","slice","i","t","FormGroup","Checkbox","checked","TextField","type","InputLabelProps","shrink","min","margin","height","ts","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d825ca52.chunk.js","sourcesContent":["export default class Model {\n    constructor() {\n        this.tree = new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.onload = () => {\n                this.treeSync = xhr.responseXML;\n                resolve(xhr.responseXML)\n            };\n            xhr.onerror = reject;\n            xhr.open(\"GET\", \"decision_tree.xml\");\n            xhr.responseType = \"document\";\n            xhr.send();\n        })\n    }\n\n    xpathSync = (node, path) => {\n        const ns = () => 'http://www.dmg.org/PMML-4_4';\n        const ret = [];\n        let els = this.treeSync.evaluate(path, node, ns, XPathResult.ANY_TYPE, null);\n        let el;\n        while ((el = els.iterateNext())) {\n            ret.push(el)\n        }\n        return ret;\n    }\n\n    xpath = async (node, path) => {\n        await this.tree\n        return this.xpathSync(node, path)\n    }\n\n    features = async () => {\n        return (await this.xpath(await this.tree, '/pmml:PMML/pmml:DataDictionary/pmml:DataField')).map((node) => node.attributes.name.value)\n    }\n\n    predict = async (row) => {\n        const segments = this.xpathSync(await this.tree, '/pmml:PMML/pmml:MiningModel/pmml:Segmentation/pmml:Segment');\n        const runSimplePredicate = (predicate) => {\n            const fv = parseFloat(row[predicate.attributes.field.value] || 0.0);\n            const cv = parseFloat(predicate.attributes.value.value);\n            switch (predicate.attributes.operator.value) {\n                case 'lessThan': return fv < cv;\n                case 'lessOrEqual': return fv <= cv;\n                case 'greaterThan': return fv > cv;\n                case 'greaterOrEqual': return fv >= cv;\n                case 'equal': return fv === cv;\n                default: throw new Error('Unsupported operator: ' + predicate.attributes.operator.value);\n            }\n        }\n        const findScore = (node) => {\n            const condition = this.xpathSync(node, 'pmml:True|pmml:SimplePredicate')\n            if (condition.length !== 1) {\n                throw new Error('Unsupported number of conditions: ' + condition.length)\n            }\n            if (condition[0].nodeName === 'SimplePredicate' && !runSimplePredicate(condition[0])) {\n                return 0.0;\n            }\n            const children = this.xpathSync(node, 'pmml:Node');\n            return children.map(findScore).reduce((acc, v) => acc + v, parseFloat(node.attributes.score ? node.attributes.score.value : 0.0))\n        };\n        return (await Promise.all(segments.map(async (segment) => {\n            await new Promise((resolve) => setTimeout(resolve, 0))\n            const weight = parseFloat(segment.attributes.weight.value)\n            const root = this.xpathSync(segment, 'pmml:TreeModel/pmml:Node')[0]\n            const score = findScore(root);\n            return weight * score;\n        }))).reduce((acc, v) => acc + v, 0.0)\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\n\nimport Model from './model';\n\nconst regions_map = {\n    'Ciudad Autónoma de Buenos Aires': 'AMBA',\n    'GBA': 'AMBA',\n    'Catamarca': 'NOA',\n    'Chaco': 'NEA',\n    'Chubut': 'Patagonia',\n    'Corrientes': 'NEA',\n    'Entre Ríos': 'NEA',\n    'Formosa': 'NEA',\n    'Jujuy': 'NOA',\n    'La Pampa': 'Pampa',\n    'La Rioja': 'NOA',\n    'Mendoza': 'Cuyo',\n    'Misiones': 'NEA',\n    'Neuquén': 'Patagonia',\n    'Río Negro': 'Patagonia',\n    'Salta': 'NOA',\n    'San Juan': 'Cuyo',\n    'San Luis': 'Cuyo',\n    'Santa Cruz': 'Patagonia',\n    'Santa Fe': 'Pampa',\n    'Santiago del Estero': 'NOA',\n    'Tucumán': 'NOA',\n    'Córdoba': 'Pampa',\n    'Provincia de Buenos Aires': 'Pampa',\n    'Tierra del Fuego': 'Patagonia',\n};\n\nclass App extends Component {\n  state = {\n    changedSinceSubmitted: true,\n    salary: null,\n    answers: {\n      'Me identifico': '',\n      'Carrera': '',\n      'Universidad': '',\n      'Tipo de contrato': '',\n      'Orientación sexual': '',\n      '¿Sufriste o presenciaste situaciones de violencia laboral?': '',\n      '¿Tenés algún tipo de discapacidad?': '',\n      'Tengo': 18,\n      'Dónde estás trabajando': 'Ciudad Autónoma de Buenos Aires',\n      'Años de experiencia': 0,\n      'Años en la empresa actual': 0,\n      'Nivel de estudios alcanzado': '',\n      'Estado': '',\n      'Cantidad de empleados': '',\n      'Actividad principal': '',\n      '¿Tenés guardias?': [],\n      '¿Gente a cargo?': 0,\n      '¿Contribuís a proyectos open source?': '',\n      '¿Programás como hobbie?': '',\n      'Trabajo de': '',\n      '¿Qué SO usás en tu laptop/PC para trabajar?': '',\n      '¿Y en tu celular?': '',\n      'Realizaste cursos de especialización': [],\n      'Plataformas': [],\n      'Lenguajes de programación': [],\n      'Frameworks, herramientas y librerías': [],\n      'Bases de datos': [],\n      'IDEs': [],\n      'Beneficios extra': [],\n      '¿A qué eventos de tecnología asististe en el último año?': [],\n    },\n    options: {\n        degree: [],\n        specialization: [],\n        occupation: [],\n        duty: [],\n        contractType: [],\n        sexualOrientation: [],\n        os: [],\n        events: [],\n        benefits: [],\n        universities: [],\n        tech: {\n          'Plataformas': [],\n          'Lenguajes de programación': [],\n          'Bases de datos': [],\n          'IDEs': [],\n        },\n    },\n    'results': []\n  };\n\n  constructor() {\n    super();\n    this.model = new Model();\n    this.formatter = new Intl.NumberFormat('es-AR', {\n      style: 'currency',\n      currency: 'ARS',\n      minimumFractionDigits: 2,\n    });\n  }\n\n  handleChange = async (event) => {\n    this.setState({changedSinceSubmitted: true})\n    const key = event.target.name\n    const val = event.target.value\n    if (Array.isArray(this.state.answers[key])) {\n      const index = this.state.answers[key].indexOf(val)\n      if (index >= 0) {\n        const arr = this.state.answers[key].concat([])\n        arr.splice(index, 1)\n        this.setState({ answers: Object.assign({}, this.state.answers, { [key]: arr }) });\n      } else {\n        this.setState({ answers: Object.assign({}, this.state.answers, { [key]: this.state.answers[key].concat([val]).sort() }) });\n      }\n    } else {\n      this.setState({ answers: Object.assign({}, this.state.answers, { [key]: val }) });\n    }\n    await this.updateSalary();\n  };\n\n  updateSalary = async () => {\n    await this.setState({salary: null})\n    const salary = await this.model.predict(Object.fromEntries(Object.entries(this.state.answers).map(([k, v]) =>\n        'Dónde estás trabajando' === k ? ['region=' + regions_map[v], 1] :\n        (['¿Gente a cargo?', 'Años de experiencia', 'Tengo'].indexOf(k) === -1 ? [k + '=' + v, 1.0] : [k, v])\n    )));\n    await this.setState({salary})\n  }\n\n  enc = val => {\n    if (Array.isArray(val)) {\n      val = val.join(', ')\n    }\n    return encodeURIComponent(val)\n  };\n\n  async componentDidMount() {\n    const features = await this.model.features()\n    const prefixOptions = (prefix) => features.filter((f) => f.startsWith(prefix + '=')).map((f) => f.substr(prefix.length + 1))\n    this.setState({options: {\n      degree: prefixOptions('Carrera').sort().concat(['Otra']),\n      universities: prefixOptions('Universidad').sort().concat(['Otra']),\n      specialization: prefixOptions('Realizaste cursos de especialización'),\n      occupation: prefixOptions('Trabajo de').sort().concat(['Otra']),\n      duty: prefixOptions('¿Tenés guardias?').sort(),\n      contractType: prefixOptions('Tipo de contrato').sort().concat(['Otro']),\n      sexualOrientation: prefixOptions('Orientación sexual').sort().concat(['Otra']),\n      os: prefixOptions('¿Qué SO usás en tu laptop/PC para trabajar?').sort().concat(['Otro']),\n      events: prefixOptions('¿A qué eventos de tecnología asististe en el último año?').sort(),\n      benefits: prefixOptions('Beneficios extra').sort(),\n      tech: {\n        'Plataformas': prefixOptions('Plataformas').sort(),\n        'Lenguajes de programación': prefixOptions('Lenguajes de programación').sort(),\n        'Bases de datos': prefixOptions('Bases de datos').sort(),\n        'IDEs': prefixOptions('IDEs').sort(),\n      },\n    }});\n    this.updateSalary();\n  }\n\n  render() {\n    const {salary} = this.state;\n    const {os, sexualOrientation, contractType, duty, occupation, specialization, benefits, events, tech, degree, universities} = this.state.options;\n\n    return (\n      <div className=\"App\">\n        <Box\n          bgcolor=\"grey.700\"\n          color=\"white\"\n          p={2}\n          position=\"fixed\"\n          top={40}\n          right={40}\n          zIndex=\"tooltip\"\n        >\n          {salary ? this.formatter.format(salary) : 'Calculando...'}\n        </Box>\n        <p>Complet&aacute; el formulario siguiente y obten&eacute; una estimaci&oacute;n del sueldo bruto que podr&iacute;as estar ganando.</p>\n        <p>El sueldo se estima de acuerdo a un modelo armado de datos recolectados en la encuesta an&oacute;nima.</p>\n        <p>Si te interesa saber c&oacute;mo est&aacute;n armados, pod&eacute;s leer el paso a paso <a href=\"https://github.com/seppo0010/sysarmy-sueldos-2020.1/blob/master/text/prediccion-de-sueldo/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">aqu&iacute;</a>.</p>\n        <p>Los modelos se armaron con datos recolectados en la <a href=\"https://sysarmy.com/blog/posts/resultados-de-la-encuesta-de-sueldos-2020-1/\" target=\"_blank\" rel=\"noopener noreferrer\">encuesta de sysarmy</a> llevada entre diciembre de 2019 y febrero de 2020.</p>\n        <p>Los resultados son a fines recreativos y no deben usarse para decisiones de contratación. El modelo discrimina por género, edad y orientación sexual, por lo que hacerlo es probablemente ilegal. La muestra usada no es representativa, por lo que los resultados no pueden generalizarse a la población en general.</p>\n        <p>La información se procesa en el browser, así que ningún servidor almacena las evaluaciones que se hagan.</p>\n        <hr/>\n        <div>\n          <FormControl component=\"fieldset\" required className=\"form-element\">\n            <FormLabel component=\"legend\">Me identifico</FormLabel>\n            <RadioGroup\n              aria-label=\"Me identifico\"\n              name=\"Me identifico\"\n              value={this.state.answers['Me identifico']}\n              onChange={this.handleChange}\n            >\n              <FormControlLabel value=\"Hombre\" control={<Radio />} label=\"Hombre\" />\n              <FormControlLabel value=\"Mujer\" control={<Radio />} label=\"Mujer\" />\n              <FormControlLabel value=\"Otros\" control={<Radio />} label=\"Otros\" />\n            </RadioGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Tengo\">Edad</InputLabel>\n            <Select\n              value={this.state.answers['Tengo']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'Tengo',\n                id: 'Tengo',\n              }}\n            >\n              <MenuItem value=\"1\">1 año</MenuItem>\n              {Array.from(Array(100).keys()).slice(2).map((i) => <MenuItem value={i} key={i}>{i} años</MenuItem>)}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Dónde estás trabajando\">Dónde estás trabajando</InputLabel>\n            <Select\n              value={this.state.answers['Dónde estás trabajando']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'Dónde estás trabajando',\n                id: 'Dónde estás trabajando',\n              }}\n            >\n              <MenuItem value=\"Catamarca\">Catamarca</MenuItem>\n              <MenuItem value=\"Chaco\">Chaco</MenuItem>\n              <MenuItem value=\"Chubut\">Chubut</MenuItem>\n              <MenuItem value=\"Ciudad Autónoma de Buenos Aires\">Ciudad Autónoma de Buenos Aires</MenuItem>\n              <MenuItem value=\"Corrientes\">Corrientes</MenuItem>\n              <MenuItem value=\"Córdoba\">Córdoba</MenuItem>\n              <MenuItem value=\"Entre Ríos\">Entre Ríos</MenuItem>\n              <MenuItem value=\"Formosa\">Formosa</MenuItem>\n              <MenuItem value=\"GBA\">GBA</MenuItem>\n              <MenuItem value=\"Jujuy\">Jujuy</MenuItem>\n              <MenuItem value=\"La Pampa\">La Pampa</MenuItem>\n              <MenuItem value=\"La Rioja\">La Rioja</MenuItem>\n              <MenuItem value=\"Mendoza\">Mendoza</MenuItem>\n              <MenuItem value=\"Misiones\">Misiones</MenuItem>\n              <MenuItem value=\"Neuquén\">Neuquén</MenuItem>\n              <MenuItem value=\"Provincia de Buenos Aires\">Provincia de Buenos Aires</MenuItem>\n              <MenuItem value=\"Río Negro\">Río Negro</MenuItem>\n              <MenuItem value=\"Salta\">Salta</MenuItem>\n              <MenuItem value=\"San Juan\">San Juan</MenuItem>\n              <MenuItem value=\"San Luis\">San Luis</MenuItem>\n              <MenuItem value=\"Santa Cruz\">Santa Cruz</MenuItem>\n              <MenuItem value=\"Santa Fe\">Santa Fe</MenuItem>\n              <MenuItem value=\"Santiago del Estero\">Santiago del Estero</MenuItem>\n              <MenuItem value=\"Tierra del Fuego\">Tierra del Fuego</MenuItem>\n              <MenuItem value=\"Tucumán\">Tucumán</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Años de experiencia\">Años de experiencia</InputLabel>\n            <Select\n              value={this.state.answers['Años de experiencia']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'Años de experiencia',\n                id: 'Años de experiencia',\n              }}\n            >\n              <MenuItem value={0}>Menos de un año</MenuItem>\n              {Array.from(Array(100).keys()).slice(1).map((i) => <MenuItem value={i} key={i}>{i} años</MenuItem>)}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Años en la empresa actual\">Años en la empresa actual</InputLabel>\n            <Select\n              value={this.state.answers['Años en la empresa actual']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'Años en la empresa actual',\n                id: 'Años en la empresa actual',\n              }}\n            >\n              <MenuItem value={0}>Menos de un año</MenuItem>\n              {Array.from(Array(100).keys()).slice(1).map((i) => <MenuItem value={i} key={i}>{i} años</MenuItem>)}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Nivel de estudios alcanzado\">Nivel de estudios alcanzado</InputLabel>\n            <Select\n              value={this.state.answers['Nivel de estudios alcanzado']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'Nivel de estudios alcanzado',\n                id: 'Nivel de estudios alcanzado',\n              }}\n            >\n              <MenuItem value=\"Primario\">Primario</MenuItem>\n              <MenuItem value=\"Secundario\">Secundario</MenuItem>\n              <MenuItem value=\"Terciario\">Terciario</MenuItem>\n              <MenuItem value=\"Universitario\">Universitario</MenuItem>\n              <MenuItem value=\"Posgrado\">Posgrado</MenuItem>\n              <MenuItem value=\"Doctorado\">Doctorado</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Estado\">Estado</InputLabel>\n            <Select\n              value={this.state.answers['Estado']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'Estado',\n                id: 'Estado',\n              }}\n            >\n              <MenuItem value=\"En curso\">En curso</MenuItem>\n              <MenuItem value=\"Incompleto\">Incompleto</MenuItem>\n              <MenuItem value=\"Completado\">Completado</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Carrera\">Carrera</InputLabel>\n            <Select\n              aria-label=\"Carrera\"\n              name=\"Carrera\"\n              value={this.state.answers['Carrera']}\n              onChange={this.handleChange}\n            >\n              {degree.map((t) =>\n              <MenuItem\n                key={`degree-${t}`}\n                value={t}\n              >{t}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Universidad\">Universidad</InputLabel>\n            <Select\n              aria-label=\"Universidad\"\n              name=\"Universidad\"\n              value={this.state.answers['Universidad']}\n              onChange={this.handleChange}\n            >\n              {universities.map((t) =>\n              <MenuItem\n                key={`university-${t}`}\n                value={t}\n              >{t}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <FormLabel component=\"legend\">Realizaste cursos de especialización</FormLabel>\n            <FormGroup style={{'flexDirection': 'column'}}>\n              {specialization.map((t) =>\n              <FormControlLabel\n                key={`specialization-${t}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers['Realizaste cursos de especialización'].indexOf(t) >= 0}\n                    onChange={this.handleChange}\n                    name=\"Realizaste cursos de especialización\"\n                    value={t}\n                  />\n                }\n                label={t}\n              />\n              )}\n            </FormGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Cantidad de empleados\">Cantidad de empleados en tu trabajo actual</InputLabel>\n            <Select\n              value={this.state.answers['Cantidad de empleados']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'Cantidad de empleados',\n                id: 'Cantidad de empleados',\n              }}\n            >\n              <MenuItem value=\"1-10\">1-10</MenuItem>\n              <MenuItem value=\"11-50\">11-50</MenuItem>\n              <MenuItem value=\"51-100\">51-100</MenuItem>\n              <MenuItem value=\"101-200\">101-200</MenuItem>\n              <MenuItem value=\"201-500\">201-500</MenuItem>\n              <MenuItem value=\"501-1000\">501-1000</MenuItem>\n              <MenuItem value=\"1001-2000\">1001-2000</MenuItem>\n              <MenuItem value=\"2001-5000\">2001-5000</MenuItem>\n              <MenuItem value=\"5001-10000\">5001-10000</MenuItem>\n              <MenuItem value=\"10001+\">10001+</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Actividad principal\">Actividad principal</InputLabel>\n            <Select\n              value={this.state.answers['Actividad principal']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'Actividad principal',\n                id: 'Actividad principal',\n              }}\n            >\n              <MenuItem value=\"Servicios / Consultoría de Software / Digital\">Servicios / Consultoría de Software / Digital</MenuItem>\n              <MenuItem value=\"Producto basado en Software\">Producto basado en Software</MenuItem>\n              <MenuItem value=\"Otras industrias\">Otras industrias</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <TextField\n              id=\"¿Gente a cargo?\"\n              name=\"¿Gente a cargo?\"\n              label=\"¿Cuánta gente a cargo? (si no tenés, poné 0)\"\n              value={this.state.answers['¿Gente a cargo?']}\n              onChange={this.handleChange}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              inputProps={{\n                min: 0,\n              }}\n              margin=\"normal\"\n            />\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"¿Contribuís a proyectos open source?\">¿Contribuís a proyectos open source?</InputLabel>\n            <Select\n              aria-label=\"¿Contribuís a proyectos open source?\"\n              name=\"¿Contribuís a proyectos open source?\"\n              value={this.state.answers['¿Contribuís a proyectos open source?']}\n              onChange={this.handleChange}\n            >\n              <MenuItem value=\"Sí\">Sí</MenuItem>\n              <MenuItem value=\"No\">No</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"¿Programás como hobbie?\">¿Programás como hobbie?</InputLabel>\n            <Select\n              aria-label=\"¿Programás como hobbie?\"\n              name=\"¿Programás como hobbie?\"\n              value={this.state.answers['¿Programás como hobbie?']}\n              onChange={this.handleChange}\n            >\n              <MenuItem value=\"Sí\">Sí</MenuItem>\n              <MenuItem value=\"No\">No</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <FormLabel component=\"legend\">¿Tenés guardias?</FormLabel>\n            <FormGroup style={{'flexDirection': 'column'}}>\n              {duty.map((t) =>\n              <FormControlLabel\n                key={`duty-${t}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers['¿Tenés guardias?'].indexOf(t) >= 0}\n                    onChange={this.handleChange}\n                    name=\"¿Tenés guardias?\"\n                    value={t}\n                  />\n                }\n                label={t}\n              />\n              )}\n            </FormGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Trabajo de\">Trabajo de</InputLabel>\n            <Select\n              value={this.state.answers['Trabajo de']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'Trabajo de',\n                id: 'Trabajo de',\n              }}\n            >\n              {occupation.map((t) =>\n              <MenuItem\n                key={`occupation-${t}`}\n                value={t}\n              >{t}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"¿Qué SO usás en tu laptop/PC para trabajar?\">¿Qué SO usás en tu laptop/PC para trabajar?</InputLabel>\n            <Select\n              aria-label=\"¿Qué SO usás en tu laptop/PC para trabajar?\"\n              name=\"¿Qué SO usás en tu laptop/PC para trabajar?\"\n              value={this.state.answers['¿Qué SO usás en tu laptop/PC para trabajar?']}\n              onChange={this.handleChange}\n            >\n              {os.map((t) =>\n              <MenuItem\n                key={`os-${t}`}\n                value={t}\n              >{t}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"¿Y en tu celular?\">¿Y en tu celular?</InputLabel>\n            <Select\n              aria-label=\"¿Y en tu celular?\"\n              name=\"¿Y en tu celular?\"\n              value={this.state.answers['¿Y en tu celular?']}\n              onChange={this.handleChange}\n            >\n              <MenuItem value=\"Android\">Android</MenuItem>\n              <MenuItem value=\"iOS\">iOS</MenuItem>\n              <MenuItem value=\"Windows\">Windows</MenuItem>\n              <MenuItem value=\"No tengo celular / no es Smartphone\">No tengo celular / no es Smartphone</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Tipo de contrato\">Tipo de contrato</InputLabel>\n            <Select\n              aria-label=\"Tipo de contrato\"\n              name=\"Tipo de contrato\"\n              value={this.state.answers['Tipo de contrato']}\n              onChange={this.handleChange}\n            >\n              {contractType.map((t) =>\n              <MenuItem\n                key={`contractType-${t}`}\n                value={t}\n              >{t}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Orientación sexual\">Orientación sexual</InputLabel>\n            <Select\n              aria-label=\"Orientación sexual\"\n              name=\"Orientación sexual\"\n              value={this.state.answers['Orientación sexual']}\n              onChange={this.handleChange}\n            >\n              {sexualOrientation.map((t) =>\n              <MenuItem\n                key={`sexualOrientation-${t}`}\n                value={t}\n              >{t}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <FormLabel component=\"legend\">¿A qué eventos de tecnología asististe en el último año?</FormLabel>\n            <FormGroup style={{'flexDirection': 'column'}}>\n              {events.map((t) =>\n              <FormControlLabel\n                key={`events-${t}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers['¿A qué eventos de tecnología asististe en el último año?'].indexOf(t) >= 0}\n                    onChange={this.handleChange}\n                    name=\"¿A qué eventos de tecnología asististe en el último año?\"\n                    value={t}\n                  />\n                }\n                label={t}\n              />\n              )}\n            </FormGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <FormLabel component=\"legend\">Tecnologías que utilizás</FormLabel>\n            <FormGroup style={{height: '820px', 'flexDirection': 'column'}}>\n              {Object.keys(tech).map(ts => tech[ts].map((t) =>\n              <FormControlLabel\n                key={`technology-${ts}-${t}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers[ts].indexOf(t) >= 0}\n                    onChange={this.handleChange}\n                    name={ts}\n                    value={t}\n                  />\n                }\n                label={t}\n              />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <FormLabel component=\"legend\">Beneficios extra</FormLabel>\n            <FormGroup style={{height: '620px', 'flexDirection': 'column'}}>\n              {benefits.map((t) =>\n              <FormControlLabel\n                key={`benefits-${t}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers['Beneficios extra'].indexOf(t) >= 0}\n                    onChange={this.handleChange}\n                    name=\"Beneficios extra\"\n                    value={t}\n                  />\n                }\n                label={t}\n              />\n              )}\n            </FormGroup>\n          </FormControl>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}